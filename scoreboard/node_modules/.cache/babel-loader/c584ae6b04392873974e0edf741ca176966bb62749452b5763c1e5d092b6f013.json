{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\sports-scoreboard\\\\scoreboard\\\\src\\\\components\\\\topLeagues\\\\topLeagues.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./topLeagues.css\";\nimport { ApiService } from \"../../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopLeagues = () => {\n  _s();\n  const [leagueLogos, setLeagueLogos] = useState({\n    premierleague: '',\n    seriea: '',\n    ligue1: '',\n    championsleague: '',\n    europaleague: '',\n    mls: '',\n    laliga: '',\n    bundesliga: ''\n  });\n\n  //   let leagueNames = ['Premier League','Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A' ,  'MLS', 'LaLiga'];\n  //   league number 2: Champ League, 39: Prem League, 78: Bundesliga, 3: Europa League, 61: Ligue 1, 140: laliga, 253: mls, 135: serie A\n\n  let leagueInfo = [{\n    leagueName: \"Premier League\",\n    num: 39\n  }, {\n    leagueName: \"Champions League\",\n    num: 2\n  }, {\n    leagueName: \"Bundesliga\",\n    num: 78\n  }, {\n    leagueName: \"Europa League\",\n    num: 3\n  }, {\n    leagueName: \"Ligue 1\",\n    num: 61\n  }, {\n    leagueName: \"Serie A\",\n    num: 135\n  }, {\n    leagueName: \"MLS\",\n    num: 253\n  }, {\n    leagueName: \"LaLiga\",\n    num: 140\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const leagueData = await new ApiService().getAllLeauges();\n        const getLeagueByName = (countryName, leagueName) => {\n          const filteredLeagues = leagueData.filter(idxData => {\n            return idxData.country.name === countryName && idxData.league.name.toLowerCase() == leagueName.toLowerCase();\n          });\n          return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\n        };\n        setLeagueLogos(prevState => ({\n          ...prevState,\n          premierleague: getLeagueByName('England', 'Premier League'),\n          bundesliga: getLeagueByName('Germany', 'Bundesliga'),\n          ligue1: getLeagueByName('France', 'Ligue 1'),\n          mls: getLeagueByName('USA', 'Major League Soccer'),\n          seriea: getLeagueByName('Italy', 'Serie A'),\n          laliga: getLeagueByName('Spain', 'la liga'),\n          championsleague: getLeagueByName('World', 'UEFA Champions League'),\n          europaleague: getLeagueByName('World', 'UEFA Europa League')\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"top-leagues\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"title-row\",\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"title\",\n          children: \"Top Leagues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: leagueInfo.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"league-row\",\n        onClick: () => {},\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"logo-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: leagueLogos[item.leagueName.toLowerCase().replace(/\\s+/g, '')],\n            className: \"logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"league-name\",\n          children: item.leagueName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(TopLeagues, \"+gcK1k2DZMmu6uSKKG3bK3aoFNU=\");\n_c = TopLeagues;\nexport default TopLeagues;\nvar _c;\n$RefreshReg$(_c, \"TopLeagues\");","map":{"version":3,"names":["useEffect","useState","ApiService","jsxDEV","_jsxDEV","TopLeagues","_s","leagueLogos","setLeagueLogos","premierleague","seriea","ligue1","championsleague","europaleague","mls","laliga","bundesliga","leagueInfo","leagueName","num","fetchData","leagueData","getAllLeauges","getLeagueByName","countryName","filteredLeagues","filter","idxData","country","name","league","toLowerCase","length","logo","prevState","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","src","replace","alt","_c","$RefreshReg$"],"sources":["C:/Users/Home/Documents/sports-scoreboard/scoreboard/src/components/topLeagues/topLeagues.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./topLeagues.css\";\r\nimport axios from \"axios\";\r\nimport { ApiService } from \"../../services/apiService\";\r\n\r\n\r\nconst TopLeagues = () => {\r\n\r\n    const [leagueLogos, setLeagueLogos] = useState<any>({\r\n        premierleague: '',\r\n        seriea: '',\r\n        ligue1: '',\r\n        championsleague: '',\r\n        europaleague: '',\r\n        mls: '',\r\n        laliga: '',\r\n        bundesliga: ''\r\n      });\r\n\r\n    //   let leagueNames = ['Premier League','Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A' ,  'MLS', 'LaLiga'];\r\n    //   league number 2: Champ League, 39: Prem League, 78: Bundesliga, 3: Europa League, 61: Ligue 1, 140: laliga, 253: mls, 135: serie A\r\n\r\n    let leagueInfo = [\r\n        {leagueName: \"Premier League\", num: 39},\r\n        {leagueName: \"Champions League\", num: 2},\r\n        {leagueName: \"Bundesliga\", num: 78},\r\n        {leagueName: \"Europa League\", num: 3},\r\n        {leagueName: \"Ligue 1\", num: 61},\r\n        {leagueName: \"Serie A\", num: 135},\r\n        {leagueName: \"MLS\", num: 253},\r\n        {leagueName: \"LaLiga\", num: 140},\r\n    ];\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n\r\n          const fetchData = async () => {\r\n\r\n            try {\r\n                const leagueData = await new ApiService().getAllLeauges();\r\n\r\n                \r\n                const getLeagueByName = (countryName: string, leagueName: string) => {\r\n                    const filteredLeagues = leagueData.filter((idxData: any) => {\r\n                        return idxData.country.name === countryName && idxData.league.name.toLowerCase() == leagueName.toLowerCase();\r\n                    });\r\n\r\n                    return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\r\n\r\n                }\r\n\r\n                setLeagueLogos((prevState: any) => ({\r\n                    ...prevState,\r\n                    premierleague: getLeagueByName('England', 'Premier League'),\r\n                    bundesliga: getLeagueByName('Germany', 'Bundesliga'),\r\n                    ligue1: getLeagueByName('France', 'Ligue 1'),\r\n                    mls: getLeagueByName('USA', 'Major League Soccer'),\r\n                    seriea: getLeagueByName('Italy', 'Serie A'),\r\n                    laliga: getLeagueByName('Spain', 'la liga'),\r\n                    championsleague: getLeagueByName('World', 'UEFA Champions League'),\r\n                    europaleague: getLeagueByName('World', 'UEFA Europa League')\r\n                  }));\r\n                  \r\n                  \r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n          }\r\n          \r\n          fetchData();\r\n\r\n    }, []);\r\n      \r\n\r\n\r\n\r\n    return (\r\n        <table className=\"top-leagues\">\r\n            <thead>\r\n                <tr className=\"title-row\">\r\n                    <th className=\"title\" >Top Leagues</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {leagueInfo.map((item, index) => (\r\n                    <tr key={index} className=\"league-row\" onClick={() => {}}                                                                                                                                                >\r\n                        <td className=\"logo-wrap\">\r\n                            <img src={leagueLogos[item.leagueName.toLowerCase().replace(/\\s+/g, '')]}  className=\"logo\" alt=\"logo\"></img>\r\n                        </td>\r\n                        <td className=\"league-name\">{item.leagueName}</td>\r\n                    </tr>\r\n                ))}\r\n\r\n                \r\n\r\n            </tbody>\r\n            \r\n        </table>\r\n    );\r\n}\r\n\r\nexport default TopLeagues;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}