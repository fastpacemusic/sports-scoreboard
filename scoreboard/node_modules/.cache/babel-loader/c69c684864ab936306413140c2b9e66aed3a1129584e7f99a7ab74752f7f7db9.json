{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\sports-scoreboard\\\\scoreboard\\\\src\\\\components\\\\topLeagues\\\\topLeagues.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./topLeagues.css\";\nimport { ApiService } from \"../../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopLeagues = ({\n  sendLeagueID\n}) => {\n  _s();\n  const [leagueLogos, setLeagueLogos] = useState({\n    premierleague: '',\n    seriea: '',\n    ligue1: '',\n    championsleague: '',\n    europaleague: '',\n    mls: '',\n    laliga: '',\n    bundesliga: ''\n  });\n\n  //   let leagueNames = ['Premier League','Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A' ,  'MLS', 'LaLiga'];\n  //   league number 2: Champ League, 39: Prem League, 78: Bundesliga, 3: Europa League, 61: Ligue 1, 140: laliga, 253: mls, 135: serie A\n\n  let leagueInfo = [{\n    leagueName: \"Premier League\",\n    num: 39,\n    logo: leagueLogos.premierLeague\n  }, {\n    leagueName: \"Champions League\",\n    num: 2,\n    logo: leagueLogos.championsleague\n  }, {\n    leagueName: \"Bundesliga\",\n    num: 78,\n    logo: leagueLogos.bundesliga\n  }, {\n    leagueName: \"Europa League\",\n    num: 3,\n    logo: leagueLogos.europaleague\n  }, {\n    leagueName: \"Ligue 1\",\n    num: 61,\n    logo: leagueLogos.ligue1\n  }, {\n    leagueName: \"Serie A\",\n    num: 135,\n    logo: leagueLogos.seriea\n  }, {\n    leagueName: \"MLS\",\n    num: 253,\n    logo: leagueLogos.mls\n  }, {\n    leagueName: \"LaLiga\",\n    num: 140,\n    logo: leagueLogos.laliga\n  }];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const leagueData = await new ApiService().getAllLeauges();\n        const getLeagueByName = (countryName, leagueName) => {\n          const filteredLeagues = leagueData.filter(idxData => {\n            return idxData.country.name === countryName && idxData.name.toLowerCase() == leagueName.toLowerCase();\n          });\n          return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\n        };\n        setLeagueLogos(prevState => ({\n          ...prevState,\n          premierleague: getLeagueByName('England', 'Premier League'),\n          bundesliga: getLeagueByName('Germany', 'Bundesliga'),\n          ligue1: getLeagueByName('France', 'Ligue 1'),\n          mls: getLeagueByName('USA', 'Major League Soccer'),\n          seriea: getLeagueByName('Italy', 'Serie A'),\n          laliga: getLeagueByName('Spain', 'la liga'),\n          championsleague: getLeagueByName('World', 'UEFA Champions League'),\n          europaleague: getLeagueByName('World', 'UEFA Europa League')\n        }));\n        console.log('1111', leagueData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"top-leagues\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"title-row\",\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"title\",\n          children: \"Top Leagues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: leagueInfo.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"league-row\",\n        onClick: () => {\n          sendLeagueID(item.num);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"logo-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.logo,\n            className: \"logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"league-name\",\n          children: item.leagueName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(TopLeagues, \"+gcK1k2DZMmu6uSKKG3bK3aoFNU=\");\n_c = TopLeagues;\nexport default TopLeagues;\nvar _c;\n$RefreshReg$(_c, \"TopLeagues\");","map":{"version":3,"names":["useEffect","useState","ApiService","jsxDEV","_jsxDEV","TopLeagues","sendLeagueID","_s","leagueLogos","setLeagueLogos","premierleague","seriea","ligue1","championsleague","europaleague","mls","laliga","bundesliga","leagueInfo","leagueName","num","logo","premierLeague","fetchData","leagueData","getAllLeauges","getLeagueByName","countryName","filteredLeagues","filter","idxData","country","name","toLowerCase","length","prevState","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Home/Documents/sports-scoreboard/scoreboard/src/components/topLeagues/topLeagues.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./topLeagues.css\";\r\nimport axios from \"axios\";\r\nimport { ApiService } from \"../../services/apiService\";\r\n\r\ninterface topLeaguesData {\r\n    sendLeagueID: (data: number) => void;\r\n}\r\n\r\n\r\nconst TopLeagues = ({sendLeagueID}: topLeaguesData) => {\r\n\r\n    const [leagueLogos, setLeagueLogos] = useState<any>({\r\n        premierleague: '',\r\n        seriea: '',\r\n        ligue1: '',\r\n        championsleague: '',\r\n        europaleague: '',\r\n        mls: '',\r\n        laliga: '',\r\n        bundesliga: ''\r\n      });\r\n\r\n    //   let leagueNames = ['Premier League','Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A' ,  'MLS', 'LaLiga'];\r\n    //   league number 2: Champ League, 39: Prem League, 78: Bundesliga, 3: Europa League, 61: Ligue 1, 140: laliga, 253: mls, 135: serie A\r\n\r\n    let leagueInfo = [\r\n        {leagueName: \"Premier League\", num: 39, logo: leagueLogos.premierLeague},\r\n        {leagueName: \"Champions League\", num: 2, logo: leagueLogos.championsleague},\r\n        {leagueName: \"Bundesliga\", num: 78, logo: leagueLogos.bundesliga},\r\n        {leagueName: \"Europa League\", num: 3, logo: leagueLogos.europaleague},\r\n        {leagueName: \"Ligue 1\", num: 61, logo: leagueLogos.ligue1},\r\n        {leagueName: \"Serie A\", num: 135, logo: leagueLogos.seriea},\r\n        {leagueName: \"MLS\", num: 253, logo: leagueLogos.mls},\r\n        {leagueName: \"LaLiga\", num: 140, logo: leagueLogos.laliga},\r\n    ];\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n\r\n          const fetchData = async () => {\r\n\r\n            try {\r\n                const leagueData = await new ApiService().getAllLeauges();\r\n                \r\n                \r\n                const getLeagueByName = (countryName: string, leagueName: string) => {\r\n                    const filteredLeagues = leagueData.filter((idxData: any) => {\r\n                        return idxData.country.name === countryName && idxData.name.toLowerCase() == leagueName.toLowerCase();\r\n                    });\r\n\r\n                    return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\r\n\r\n                }\r\n\r\n                setLeagueLogos((prevState: any) => ({\r\n                    ...prevState,\r\n                    premierleague: getLeagueByName('England', 'Premier League'),\r\n                    bundesliga: getLeagueByName('Germany', 'Bundesliga'),\r\n                    ligue1: getLeagueByName('France', 'Ligue 1'),\r\n                    mls: getLeagueByName('USA', 'Major League Soccer'),\r\n                    seriea: getLeagueByName('Italy', 'Serie A'),\r\n                    laliga: getLeagueByName('Spain', 'la liga'),\r\n                    championsleague: getLeagueByName('World', 'UEFA Champions League'),\r\n                    europaleague: getLeagueByName('World', 'UEFA Europa League')\r\n                  }));\r\n                  \r\n                  console.log('1111', leagueData);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n          }\r\n          \r\n          fetchData();\r\n\r\n    }, []);\r\n      \r\n\r\n\r\n\r\n    return (\r\n        <table className=\"top-leagues\">\r\n            <thead>\r\n                <tr className=\"title-row\">\r\n                    <th className=\"title\" >Top Leagues</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {leagueInfo.map((item: any, index: number) => (\r\n                    <tr key={index} className=\"league-row\" onClick={() => {sendLeagueID(item.num)}}                                                                                                                                                >\r\n                        <td className=\"logo-wrap\">\r\n                            <img src={item.logo}  className=\"logo\" alt=\"logo\"></img>\r\n                        </td>\r\n                        <td className=\"league-name\">{item.leagueName}</td>\r\n                    </tr>\r\n                ))}\r\n\r\n                \r\n\r\n            </tbody>\r\n            \r\n        </table>\r\n    );\r\n}\r\n\r\nexport default TopLeagues;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}