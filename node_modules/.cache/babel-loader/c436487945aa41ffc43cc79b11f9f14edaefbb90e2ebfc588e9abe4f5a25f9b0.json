{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew Vodeniktov\\\\Documents\\\\workplace\\\\sports-scoreboard\\\\src\\\\components\\\\scoreboard\\\\scoreboard.tsx\",\n  _s = $RefreshSig$();\nimport \"./scoreboard.css\";\nimport Row from \"./sb-row/row\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { ApiService } from \"../../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scoreboard = ({\n  leagueNum\n}) => {\n  _s();\n  const [standings, setStandings] = useState();\n  const fetchData = async leagueNum => {\n    try {\n      const response = await new ApiService().getScoreBoard(leagueNum);\n      setStandings(response.league.standings[0]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchData(leagueNum);\n  }, [leagueNum]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"scoreboard-wrap panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"sb-positions\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"title-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-pos\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-team\",\n          children: \"Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-played\",\n          children: \"PL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-gd\",\n          children: \"GD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-pts\",\n          children: \"PTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"sb-form\",\n          children: \"Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: standings && standings.map((teamData, index) => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          leagueNumber: leagueNum,\n          pos: teamData.rank,\n          logo: teamData.team.logo,\n          team: teamData.team.name,\n          played: teamData.all.played,\n          pts: teamData.points,\n          gd: teamData.goalsDiff,\n          tournament: teamData.description,\n          form: teamData.form\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Scoreboard, \"TYgTFNe1GRzFZ2wft3tPboE0w0g=\");\n_c = Scoreboard;\nexport default Scoreboard;\nvar _c;\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"names":["Row","useState","useEffect","ApiService","jsxDEV","_jsxDEV","Scoreboard","leagueNum","_s","standings","setStandings","fetchData","response","getScoreBoard","league","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","teamData","index","leagueNumber","pos","rank","logo","team","name","played","all","pts","points","gd","goalsDiff","tournament","description","form","_c","$RefreshReg$"],"sources":["C:/Users/Matthew Vodeniktov/Documents/workplace/sports-scoreboard/src/components/scoreboard/scoreboard.tsx"],"sourcesContent":["import \"./scoreboard.css\";\r\nimport Row from \"./sb-row/row\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { ApiService } from \"../../services/apiService\";\r\nimport Loading from \"../loading/loading\";\r\n\r\ninterface scoreboardData {\r\n    leagueNum: number\r\n}\r\n\r\n\r\nconst Scoreboard = ({leagueNum}: scoreboardData) => {\r\n\r\n    const [standings, setStandings] = useState<any>();\r\n\r\n    const fetchData = async (leagueNum: number) => {\r\n        try {\r\n            const response = await new ApiService().getScoreBoard(leagueNum);\r\n            setStandings(response.league.standings[0]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n          fetchData(leagueNum);\r\n\r\n    }, [leagueNum]);\r\n\r\n\r\n\r\n    return(\r\n        <table className=\"scoreboard-wrap panel\">\r\n            <thead className=\"sb-positions\">\r\n                <tr className=\"title-wrap\">\r\n                    <th className=\"empty\"></th>\r\n                    <th className=\"sb-pos\">#</th>\r\n                    <th className=\"empty\"></th>\r\n                    <th className=\"sb-team\">Team</th>\r\n                    <th className=\"sb-played\">PL</th>\r\n                    <th className=\"sb-gd\">GD</th>\r\n                    <th className=\"sb-pts\">PTS</th>\r\n                    <th className=\"sb-form\">Form</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {standings && standings.map((teamData: any, index: number) => {\r\n                        return(\r\n                            <Row key={index} leagueNumber={leagueNum} pos={teamData.rank} logo={teamData.team.logo} team={teamData.team.name} played={teamData.all.played} pts={teamData.points} gd={teamData.goalsDiff} tournament={teamData.description} form={teamData.form} />\r\n                        );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Scoreboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}