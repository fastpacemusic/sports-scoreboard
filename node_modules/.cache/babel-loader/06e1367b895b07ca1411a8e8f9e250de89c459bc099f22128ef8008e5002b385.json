{"ast":null,"code":"var _jsxFileName = \"/Users/matthewvodeniktov/Documents/sports-scoreboard/scoreboard/src/components/topLeagues/topLeagues.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./topLeagues.css\";\nimport { ApiService } from \"../../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopLeagues = () => {\n  _s();\n  const [leagueLogos, setLeagueLogos] = useState({\n    premierleague: '',\n    seriea: '',\n    ligue1: '',\n    championsleague: '',\n    europaleague: '',\n    mls: '',\n    laliga: '',\n    bundesliga: ''\n  });\n  let leagueNames = ['Premier League', 'Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A', 'MLS', 'LaLiga'];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const leagueData = await new ApiService().getAllLeauges();\n        const scoreboardData = await new ApiService().getScoreBoard();\n        console.log(\"topleagues\", leagueData);\n        const getLeagueByName = (countryName, leagueName) => {\n          const filteredLeagues = leagueData.filter(idxData => {\n            return idxData.country.name === countryName && idxData.league.name.toLowerCase() == leagueName.toLowerCase();\n          });\n          return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\n        };\n        setLeagueLogos(prevState => ({\n          ...prevState,\n          premierleague: getLeagueByName('England', 'Premier League'),\n          bundesliga: getLeagueByName('Germany', 'Bundesliga'),\n          ligue1: getLeagueByName('France', 'Ligue 1'),\n          mls: getLeagueByName('USA', 'Major League Soccer'),\n          seriea: getLeagueByName('Italy', 'Serie A'),\n          laliga: getLeagueByName('Spain', 'la liga'),\n          championsleague: getLeagueByName('World', 'UEFA Champions League'),\n          europaleague: getLeagueByName('World', 'UEFA Europa League')\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Object.entries(leagueLogos).map(([key, value]) => {\n  //     console.log(`League: ${key}, Logo: ${value}`);\n  //   });\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"top-leagues\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"title-row\",\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"title\",\n          children: \"Top Leagues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: leagueNames.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"league-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"logo-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: leagueLogos[item.toLowerCase().replace(/\\s+/g, '')],\n            className: \"logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"league-name\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(TopLeagues, \"ABFH/lmR219kLXh+JRNJWu7Ju6o=\");\n_c = TopLeagues;\nexport default TopLeagues;\nvar _c;\n$RefreshReg$(_c, \"TopLeagues\");","map":{"version":3,"names":["useEffect","useState","ApiService","jsxDEV","_jsxDEV","TopLeagues","_s","leagueLogos","setLeagueLogos","premierleague","seriea","ligue1","championsleague","europaleague","mls","laliga","bundesliga","leagueNames","fetchData","leagueData","getAllLeauges","scoreboardData","getScoreBoard","console","log","getLeagueByName","countryName","leagueName","filteredLeagues","filter","idxData","country","name","league","toLowerCase","length","logo","prevState","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","src","replace","alt","_c","$RefreshReg$"],"sources":["/Users/matthewvodeniktov/Documents/sports-scoreboard/scoreboard/src/components/topLeagues/topLeagues.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./topLeagues.css\";\nimport axios from \"axios\";\nimport { ApiService } from \"../../services/apiService\";\n\n\nconst TopLeagues = () => {\n\n    const [leagueLogos, setLeagueLogos] = useState<any>({\n        premierleague: '',\n        seriea: '',\n        ligue1: '',\n        championsleague: '',\n        europaleague: '',\n        mls: '',\n        laliga: '',\n        bundesliga: ''\n      });\n\n      let leagueNames = ['Premier League','Champions League', 'Bundesliga', 'Europa League', 'Ligue 1', 'Serie A' ,  'MLS', 'LaLiga'];\n      \n\n    useEffect(() => {\n\n\n          const fetchData = async () => {\n\n            try {\n                const leagueData = await new ApiService().getAllLeauges();\n                const scoreboardData = await new ApiService().getScoreBoard();\n                console.log(\"topleagues\", leagueData);\n                \n                const getLeagueByName = (countryName: string, leagueName: string) => {\n                    const filteredLeagues = leagueData.filter((idxData: any) => {\n                        return idxData.country.name === countryName && idxData.league.name.toLowerCase() == leagueName.toLowerCase();\n                    });\n\n                    return filteredLeagues.length > 0 ? filteredLeagues[0].logo : '';\n\n                }\n\n                setLeagueLogos((prevState: any) => ({\n                    ...prevState,\n                    premierleague: getLeagueByName('England', 'Premier League'),\n                    bundesliga: getLeagueByName('Germany', 'Bundesliga'),\n                    ligue1: getLeagueByName('France', 'Ligue 1'),\n                    mls: getLeagueByName('USA', 'Major League Soccer'),\n                    seriea: getLeagueByName('Italy', 'Serie A'),\n                    laliga: getLeagueByName('Spain', 'la liga'),\n                    championsleague: getLeagueByName('World', 'UEFA Champions League'),\n                    europaleague: getLeagueByName('World', 'UEFA Europa League')\n                  }));\n                  \n                  \n\n            } catch (error) {\n                console.error(error);\n            }\n\n          }\n          \n          fetchData();\n\n    }, []);\n\n    // Object.entries(leagueLogos).map(([key, value]) => {\n    //     console.log(`League: ${key}, Logo: ${value}`);\n    //   });\n      \n\n\n\n    return (\n        <table className=\"top-leagues\">\n            <thead>\n                <tr className=\"title-row\">\n                    <th className=\"title\" >Top Leagues</th>\n                </tr>\n            </thead>\n            <tbody>\n                {leagueNames.map((item, index) => (\n                    <tr key={index} className=\"league-row\">\n                        <td className=\"logo-wrap\">\n                            <img src={leagueLogos[item.toLowerCase().replace(/\\s+/g, '')]}  className=\"logo\" alt=\"logo\"></img>\n                        </td>\n                        <td className=\"league-name\">{item}</td>\n                    </tr>\n                ))}\n\n                \n\n            </tbody>\n            \n        </table>\n    );\n}\n\nexport default TopLeagues;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}